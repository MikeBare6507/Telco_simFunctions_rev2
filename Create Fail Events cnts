
--Uses cid age to add up failure event counts so that probability of failures increases every year, and probable number of events increases over time

WITH event_probabilities AS (
    SELECT cid, cid_age,
        -- Base failures
        CASE 
            WHEN cid_age = 1 THEN (random() < 0.50)::int
            WHEN cid_age = 2 THEN (random() < 0.90)::int
            WHEN cid_age = 3 THEN (random() < 0.97)::int
            WHEN cid_age >= 4 THEN 1  -- From year 4 onward, at least one failure event is guaranteed
        END AS base_failures,

        -- Additional failures based on probabilities
        CASE 
            WHEN cid_age = 5 THEN (random() < 0.40)::int
            WHEN cid_age = 6 THEN (random() < 0.60)::int
            WHEN cid_age = 7 THEN (random() < 0.80)::int
            WHEN cid_age = 8 THEN (random() < 0.95)::int
            WHEN cid_age = 9 THEN 1 + (random() < 0.10)::int + (random() < 0.05)::int
            WHEN cid_age = 10 THEN 1 + (random() < 0.30)::int + (random() < 0.05)::int
            WHEN cid_age = 11 THEN 1 + (random() < 0.50)::int + (random() < 0.07)::int
            WHEN cid_age = 12 THEN 1 + (random() < 0.70)::int + (random() < 0.10)::int
            WHEN cid_age = 13 THEN 1 + (random() < 0.90)::int + (random() < 0.10)::int
            WHEN cid_age = 14 THEN 2 + (random() < 0.20)::int + (random() < 0.10)::int
            WHEN cid_age = 15 THEN 2 + (random() < 0.40)::int + (random() < 0.20)::int
            WHEN cid_age = 16 THEN 2 + (random() < 0.50)::int + (random() < 0.20)::int
            WHEN cid_age = 17 THEN 2 + (random() < 0.60)::int + (random() < 0.20)::int
            WHEN cid_age >= 18 THEN 2 + (random() < 0.80)::int + (random() < 0.40)::int
            ELSE 0
        END AS additional_failures
    FROM simulation_matrix
)
UPDATE simulation_matrix sm
SET fail_events_cnt = ep.base_failures + ep.additional_failures
FROM event_probabilities ep
WHERE sm.cid = ep.cid;
