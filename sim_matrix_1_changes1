-- Add the new columns to the table
ALTER TABLE simulation_matrix
ADD COLUMN fail_events INT DEFAULT 0,
ADD COLUMN fail_events_cnt INT DEFAULT 0;

-- Update fail_events based on the weighted probability function
-- This uses a CASE statement to assign probabilities based on cid_age.
WITH updated_fail_events AS (
    SELECT 
        cid,
        cid_age,
        CASE
            WHEN random() <= (0.3 + ((cid_age - 1) * 0.035)) THEN 1 -- Probability increases from 30% to 98%
            ELSE 0
        END AS fail_events_value
    FROM simulation_matrix
)
UPDATE simulation_matrix
SET fail_events = u.fail_events_value
FROM updated_fail_events u
WHERE simulation_matrix.cid = u.cid;

-- Update fail_events_cnt for records where fail_events = 1
WITH failure_counts AS (
    SELECT 
        cid,
        cid_age,
        fail_events,
        CASE 
            WHEN fail_events = 1 THEN (
                SELECT SUM((random() * 4)::INT) -- Generate random failures for each year and sum them
                FROM generate_series(1, cid_age) AS year
            )
            ELSE 0
        END AS fail_events_count
    FROM simulation_matrix
)
UPDATE simulation_matrix
SET fail_events_cnt = f.fail_events_count
FROM failure_counts f
WHERE simulation_matrix.cid = f.cid;


-- Verify results
SELECT cid, cid_age, fail_events, fail_events_cnt
FROM simulation_matrix
ORDER BY cid;
